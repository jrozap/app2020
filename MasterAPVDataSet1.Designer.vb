'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.9151
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("MasterAPVDataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class MasterAPVDataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableMasterManoObra As MasterManoObraDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MasterManoObra")) Is Nothing) Then
                MyBase.Tables.Add(New MasterManoObraDataTable(ds.Tables("MasterManoObra")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MasterManoObra() As MasterManoObraDataTable
        Get
            Return Me.tableMasterManoObra
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As MasterAPVDataSet1 = CType(MyBase.Clone,MasterAPVDataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MasterManoObra")) Is Nothing) Then
                MyBase.Tables.Add(New MasterManoObraDataTable(ds.Tables("MasterManoObra")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMasterManoObra = CType(MyBase.Tables("MasterManoObra"),MasterManoObraDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMasterManoObra) Is Nothing) Then
                Me.tableMasterManoObra.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "MasterAPVDataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/MasterAPVDataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMasterManoObra = New MasterManoObraDataTable
        MyBase.Tables.Add(Me.tableMasterManoObra)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMasterManoObra() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As MasterAPVDataSet1 = New MasterAPVDataSet1
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub MasterManoObraRowChangeEventHandler(ByVal sender As Object, ByVal e As MasterManoObraRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MasterManoObraDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnDescripcion As Global.System.Data.DataColumn
        
        Private columnCodigo As Global.System.Data.DataColumn
        
        Private columnUnidad As Global.System.Data.DataColumn
        
        Private columnFecha As Global.System.Data.DataColumn
        
        Private columnJornal As Global.System.Data.DataColumn
        
        Private columnBono As Global.System.Data.DataColumn
        
        Private columnTipo As Global.System.Data.DataColumn
        
        Private columnJornalMes1 As Global.System.Data.DataColumn
        
        Private columnJornalMes2 As Global.System.Data.DataColumn
        
        Private columnJornalMes3 As Global.System.Data.DataColumn
        
        Private columnJornalMes4 As Global.System.Data.DataColumn
        
        Private columnJornalMes5 As Global.System.Data.DataColumn
        
        Private columnJornalMes6 As Global.System.Data.DataColumn
        
        Private columnJornalMes7 As Global.System.Data.DataColumn
        
        Private columnJornalMes8 As Global.System.Data.DataColumn
        
        Private columnJornalMes9 As Global.System.Data.DataColumn
        
        Private columnJornalMes10 As Global.System.Data.DataColumn
        
        Private columnJornalMes11 As Global.System.Data.DataColumn
        
        Private columnJornalMes12 As Global.System.Data.DataColumn
        
        Private columnBonoMes1 As Global.System.Data.DataColumn
        
        Private columnBonoMes2 As Global.System.Data.DataColumn
        
        Private columnBonoMes3 As Global.System.Data.DataColumn
        
        Private columnBonoMes4 As Global.System.Data.DataColumn
        
        Private columnBonoMes5 As Global.System.Data.DataColumn
        
        Private columnBonoMes6 As Global.System.Data.DataColumn
        
        Private columnBonoMes7 As Global.System.Data.DataColumn
        
        Private columnBonoMes8 As Global.System.Data.DataColumn
        
        Private columnBonoMes9 As Global.System.Data.DataColumn
        
        Private columnBonoMes10 As Global.System.Data.DataColumn
        
        Private columnBonoMes11 As Global.System.Data.DataColumn
        
        Private columnBonoMes12 As Global.System.Data.DataColumn
        
        Private columnJornal2daMoneda As Global.System.Data.DataColumn
        
        Private columnBono2daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes12daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes22daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes32daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes42daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes52daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes62daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes72daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes82daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes92daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes102daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes112daMoneda As Global.System.Data.DataColumn
        
        Private columnJornalMes122daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes12daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes22daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes32daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes42daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes52daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes62daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes72daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes82daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes92daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes102daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes112daMoneda As Global.System.Data.DataColumn
        
        Private columnBonoMes122daMoneda As Global.System.Data.DataColumn
        
        Private columnDiferenciaJornal As Global.System.Data.DataColumn
        
        Private columnDiferenciaBono As Global.System.Data.DataColumn
        
        Private columnPorcentajeJornal As Global.System.Data.DataColumn
        
        Private columnPorcentajeBono As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MasterManoObra"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UnidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Jornal2daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornal2daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bono2daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBono2daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes12daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes12daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes22daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes22daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes32daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes32daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes42daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes42daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes52daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes52daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes62daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes62daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes72daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes72daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes82daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes82daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes92daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes92daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes102daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes102daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes112daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes112daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JornalMes122daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJornalMes122daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes12daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes12daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes22daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes22daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes32daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes32daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes42daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes42daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes52daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes52daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes62daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes62daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes72daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes72daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes82daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes82daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes92daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes92daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes102daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes102daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes112daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes112daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonoMes122daMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonoMes122daMoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiferenciaJornalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiferenciaJornal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiferenciaBonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiferenciaBono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcentajeJornalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeJornal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcentajeBonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeBono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MasterManoObraRow
            Get
                Return CType(Me.Rows(index),MasterManoObraRow)
            End Get
        End Property
        
        Public Event MasterManoObraRowChanging As MasterManoObraRowChangeEventHandler
        
        Public Event MasterManoObraRowChanged As MasterManoObraRowChangeEventHandler
        
        Public Event MasterManoObraRowDeleting As MasterManoObraRowChangeEventHandler
        
        Public Event MasterManoObraRowDeleted As MasterManoObraRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMasterManoObraRow(ByVal row As MasterManoObraRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMasterManoObraRow( _
                    ByVal ID As Double,  _
                    ByVal Descripcion As String,  _
                    ByVal Codigo As Double,  _
                    ByVal Unidad As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Jornal As Double,  _
                    ByVal Bono As Double,  _
                    ByVal Tipo As Double,  _
                    ByVal JornalMes1 As Double,  _
                    ByVal JornalMes2 As Double,  _
                    ByVal JornalMes3 As Double,  _
                    ByVal JornalMes4 As Double,  _
                    ByVal JornalMes5 As Double,  _
                    ByVal JornalMes6 As Double,  _
                    ByVal JornalMes7 As Double,  _
                    ByVal JornalMes8 As Double,  _
                    ByVal JornalMes9 As Double,  _
                    ByVal JornalMes10 As Double,  _
                    ByVal JornalMes11 As Double,  _
                    ByVal JornalMes12 As Double,  _
                    ByVal BonoMes1 As Double,  _
                    ByVal BonoMes2 As Double,  _
                    ByVal BonoMes3 As Double,  _
                    ByVal BonoMes4 As Double,  _
                    ByVal BonoMes5 As Double,  _
                    ByVal BonoMes6 As Double,  _
                    ByVal BonoMes7 As Double,  _
                    ByVal BonoMes8 As Double,  _
                    ByVal BonoMes9 As Double,  _
                    ByVal BonoMes10 As Double,  _
                    ByVal BonoMes11 As Double,  _
                    ByVal BonoMes12 As Double,  _
                    ByVal Jornal2daMoneda As Double,  _
                    ByVal Bono2daMoneda As Double,  _
                    ByVal JornalMes12daMoneda As Double,  _
                    ByVal JornalMes22daMoneda As Double,  _
                    ByVal JornalMes32daMoneda As Double,  _
                    ByVal JornalMes42daMoneda As Double,  _
                    ByVal JornalMes52daMoneda As Double,  _
                    ByVal JornalMes62daMoneda As Double,  _
                    ByVal JornalMes72daMoneda As Double,  _
                    ByVal JornalMes82daMoneda As Double,  _
                    ByVal JornalMes92daMoneda As Double,  _
                    ByVal JornalMes102daMoneda As Double,  _
                    ByVal JornalMes112daMoneda As Double,  _
                    ByVal JornalMes122daMoneda As Double,  _
                    ByVal BonoMes12daMoneda As Double,  _
                    ByVal BonoMes22daMoneda As Double,  _
                    ByVal BonoMes32daMoneda As Double,  _
                    ByVal BonoMes42daMoneda As Double,  _
                    ByVal BonoMes52daMoneda As Double,  _
                    ByVal BonoMes62daMoneda As Double,  _
                    ByVal BonoMes72daMoneda As Double,  _
                    ByVal BonoMes82daMoneda As Double,  _
                    ByVal BonoMes92daMoneda As Double,  _
                    ByVal BonoMes102daMoneda As Double,  _
                    ByVal BonoMes112daMoneda As Double,  _
                    ByVal BonoMes122daMoneda As Double,  _
                    ByVal DiferenciaJornal As Double,  _
                    ByVal DiferenciaBono As Double,  _
                    ByVal PorcentajeJornal As Double,  _
                    ByVal PorcentajeBono As Double) As MasterManoObraRow
            Dim rowMasterManoObraRow As MasterManoObraRow = CType(Me.NewRow,MasterManoObraRow)
            Dim columnValuesArray() As Object = New Object() {ID, Descripcion, Codigo, Unidad, Fecha, Jornal, Bono, Tipo, JornalMes1, JornalMes2, JornalMes3, JornalMes4, JornalMes5, JornalMes6, JornalMes7, JornalMes8, JornalMes9, JornalMes10, JornalMes11, JornalMes12, BonoMes1, BonoMes2, BonoMes3, BonoMes4, BonoMes5, BonoMes6, BonoMes7, BonoMes8, BonoMes9, BonoMes10, BonoMes11, BonoMes12, Jornal2daMoneda, Bono2daMoneda, JornalMes12daMoneda, JornalMes22daMoneda, JornalMes32daMoneda, JornalMes42daMoneda, JornalMes52daMoneda, JornalMes62daMoneda, JornalMes72daMoneda, JornalMes82daMoneda, JornalMes92daMoneda, JornalMes102daMoneda, JornalMes112daMoneda, JornalMes122daMoneda, BonoMes12daMoneda, BonoMes22daMoneda, BonoMes32daMoneda, BonoMes42daMoneda, BonoMes52daMoneda, BonoMes62daMoneda, BonoMes72daMoneda, BonoMes82daMoneda, BonoMes92daMoneda, BonoMes102daMoneda, BonoMes112daMoneda, BonoMes122daMoneda, DiferenciaJornal, DiferenciaBono, PorcentajeJornal, PorcentajeBono}
            rowMasterManoObraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMasterManoObraRow)
            Return rowMasterManoObraRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MasterManoObraDataTable = CType(MyBase.Clone,MasterManoObraDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MasterManoObraDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnUnidad = MyBase.Columns("Unidad")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnJornal = MyBase.Columns("Jornal")
            Me.columnBono = MyBase.Columns("Bono")
            Me.columnTipo = MyBase.Columns("Tipo")
            Me.columnJornalMes1 = MyBase.Columns("JornalMes1")
            Me.columnJornalMes2 = MyBase.Columns("JornalMes2")
            Me.columnJornalMes3 = MyBase.Columns("JornalMes3")
            Me.columnJornalMes4 = MyBase.Columns("JornalMes4")
            Me.columnJornalMes5 = MyBase.Columns("JornalMes5")
            Me.columnJornalMes6 = MyBase.Columns("JornalMes6")
            Me.columnJornalMes7 = MyBase.Columns("JornalMes7")
            Me.columnJornalMes8 = MyBase.Columns("JornalMes8")
            Me.columnJornalMes9 = MyBase.Columns("JornalMes9")
            Me.columnJornalMes10 = MyBase.Columns("JornalMes10")
            Me.columnJornalMes11 = MyBase.Columns("JornalMes11")
            Me.columnJornalMes12 = MyBase.Columns("JornalMes12")
            Me.columnBonoMes1 = MyBase.Columns("BonoMes1")
            Me.columnBonoMes2 = MyBase.Columns("BonoMes2")
            Me.columnBonoMes3 = MyBase.Columns("BonoMes3")
            Me.columnBonoMes4 = MyBase.Columns("BonoMes4")
            Me.columnBonoMes5 = MyBase.Columns("BonoMes5")
            Me.columnBonoMes6 = MyBase.Columns("BonoMes6")
            Me.columnBonoMes7 = MyBase.Columns("BonoMes7")
            Me.columnBonoMes8 = MyBase.Columns("BonoMes8")
            Me.columnBonoMes9 = MyBase.Columns("BonoMes9")
            Me.columnBonoMes10 = MyBase.Columns("BonoMes10")
            Me.columnBonoMes11 = MyBase.Columns("BonoMes11")
            Me.columnBonoMes12 = MyBase.Columns("BonoMes12")
            Me.columnJornal2daMoneda = MyBase.Columns("Jornal2daMoneda")
            Me.columnBono2daMoneda = MyBase.Columns("Bono2daMoneda")
            Me.columnJornalMes12daMoneda = MyBase.Columns("JornalMes12daMoneda")
            Me.columnJornalMes22daMoneda = MyBase.Columns("JornalMes22daMoneda")
            Me.columnJornalMes32daMoneda = MyBase.Columns("JornalMes32daMoneda")
            Me.columnJornalMes42daMoneda = MyBase.Columns("JornalMes42daMoneda")
            Me.columnJornalMes52daMoneda = MyBase.Columns("JornalMes52daMoneda")
            Me.columnJornalMes62daMoneda = MyBase.Columns("JornalMes62daMoneda")
            Me.columnJornalMes72daMoneda = MyBase.Columns("JornalMes72daMoneda")
            Me.columnJornalMes82daMoneda = MyBase.Columns("JornalMes82daMoneda")
            Me.columnJornalMes92daMoneda = MyBase.Columns("JornalMes92daMoneda")
            Me.columnJornalMes102daMoneda = MyBase.Columns("JornalMes102daMoneda")
            Me.columnJornalMes112daMoneda = MyBase.Columns("JornalMes112daMoneda")
            Me.columnJornalMes122daMoneda = MyBase.Columns("JornalMes122daMoneda")
            Me.columnBonoMes12daMoneda = MyBase.Columns("BonoMes12daMoneda")
            Me.columnBonoMes22daMoneda = MyBase.Columns("BonoMes22daMoneda")
            Me.columnBonoMes32daMoneda = MyBase.Columns("BonoMes32daMoneda")
            Me.columnBonoMes42daMoneda = MyBase.Columns("BonoMes42daMoneda")
            Me.columnBonoMes52daMoneda = MyBase.Columns("BonoMes52daMoneda")
            Me.columnBonoMes62daMoneda = MyBase.Columns("BonoMes62daMoneda")
            Me.columnBonoMes72daMoneda = MyBase.Columns("BonoMes72daMoneda")
            Me.columnBonoMes82daMoneda = MyBase.Columns("BonoMes82daMoneda")
            Me.columnBonoMes92daMoneda = MyBase.Columns("BonoMes92daMoneda")
            Me.columnBonoMes102daMoneda = MyBase.Columns("BonoMes102daMoneda")
            Me.columnBonoMes112daMoneda = MyBase.Columns("BonoMes112daMoneda")
            Me.columnBonoMes122daMoneda = MyBase.Columns("BonoMes122daMoneda")
            Me.columnDiferenciaJornal = MyBase.Columns("DiferenciaJornal")
            Me.columnDiferenciaBono = MyBase.Columns("DiferenciaBono")
            Me.columnPorcentajeJornal = MyBase.Columns("PorcentajeJornal")
            Me.columnPorcentajeBono = MyBase.Columns("PorcentajeBono")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnUnidad = New Global.System.Data.DataColumn("Unidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidad)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnJornal = New Global.System.Data.DataColumn("Jornal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornal)
            Me.columnBono = New Global.System.Data.DataColumn("Bono", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBono)
            Me.columnTipo = New Global.System.Data.DataColumn("Tipo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo)
            Me.columnJornalMes1 = New Global.System.Data.DataColumn("JornalMes1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes1)
            Me.columnJornalMes2 = New Global.System.Data.DataColumn("JornalMes2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes2)
            Me.columnJornalMes3 = New Global.System.Data.DataColumn("JornalMes3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes3)
            Me.columnJornalMes4 = New Global.System.Data.DataColumn("JornalMes4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes4)
            Me.columnJornalMes5 = New Global.System.Data.DataColumn("JornalMes5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes5)
            Me.columnJornalMes6 = New Global.System.Data.DataColumn("JornalMes6", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes6)
            Me.columnJornalMes7 = New Global.System.Data.DataColumn("JornalMes7", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes7)
            Me.columnJornalMes8 = New Global.System.Data.DataColumn("JornalMes8", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes8)
            Me.columnJornalMes9 = New Global.System.Data.DataColumn("JornalMes9", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes9)
            Me.columnJornalMes10 = New Global.System.Data.DataColumn("JornalMes10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes10)
            Me.columnJornalMes11 = New Global.System.Data.DataColumn("JornalMes11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes11)
            Me.columnJornalMes12 = New Global.System.Data.DataColumn("JornalMes12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes12)
            Me.columnBonoMes1 = New Global.System.Data.DataColumn("BonoMes1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes1)
            Me.columnBonoMes2 = New Global.System.Data.DataColumn("BonoMes2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes2)
            Me.columnBonoMes3 = New Global.System.Data.DataColumn("BonoMes3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes3)
            Me.columnBonoMes4 = New Global.System.Data.DataColumn("BonoMes4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes4)
            Me.columnBonoMes5 = New Global.System.Data.DataColumn("BonoMes5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes5)
            Me.columnBonoMes6 = New Global.System.Data.DataColumn("BonoMes6", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes6)
            Me.columnBonoMes7 = New Global.System.Data.DataColumn("BonoMes7", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes7)
            Me.columnBonoMes8 = New Global.System.Data.DataColumn("BonoMes8", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes8)
            Me.columnBonoMes9 = New Global.System.Data.DataColumn("BonoMes9", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes9)
            Me.columnBonoMes10 = New Global.System.Data.DataColumn("BonoMes10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes10)
            Me.columnBonoMes11 = New Global.System.Data.DataColumn("BonoMes11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes11)
            Me.columnBonoMes12 = New Global.System.Data.DataColumn("BonoMes12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes12)
            Me.columnJornal2daMoneda = New Global.System.Data.DataColumn("Jornal2daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornal2daMoneda)
            Me.columnBono2daMoneda = New Global.System.Data.DataColumn("Bono2daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBono2daMoneda)
            Me.columnJornalMes12daMoneda = New Global.System.Data.DataColumn("JornalMes12daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes12daMoneda)
            Me.columnJornalMes22daMoneda = New Global.System.Data.DataColumn("JornalMes22daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes22daMoneda)
            Me.columnJornalMes32daMoneda = New Global.System.Data.DataColumn("JornalMes32daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes32daMoneda)
            Me.columnJornalMes42daMoneda = New Global.System.Data.DataColumn("JornalMes42daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes42daMoneda)
            Me.columnJornalMes52daMoneda = New Global.System.Data.DataColumn("JornalMes52daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes52daMoneda)
            Me.columnJornalMes62daMoneda = New Global.System.Data.DataColumn("JornalMes62daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes62daMoneda)
            Me.columnJornalMes72daMoneda = New Global.System.Data.DataColumn("JornalMes72daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes72daMoneda)
            Me.columnJornalMes82daMoneda = New Global.System.Data.DataColumn("JornalMes82daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes82daMoneda)
            Me.columnJornalMes92daMoneda = New Global.System.Data.DataColumn("JornalMes92daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes92daMoneda)
            Me.columnJornalMes102daMoneda = New Global.System.Data.DataColumn("JornalMes102daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes102daMoneda)
            Me.columnJornalMes112daMoneda = New Global.System.Data.DataColumn("JornalMes112daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes112daMoneda)
            Me.columnJornalMes122daMoneda = New Global.System.Data.DataColumn("JornalMes122daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJornalMes122daMoneda)
            Me.columnBonoMes12daMoneda = New Global.System.Data.DataColumn("BonoMes12daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes12daMoneda)
            Me.columnBonoMes22daMoneda = New Global.System.Data.DataColumn("BonoMes22daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes22daMoneda)
            Me.columnBonoMes32daMoneda = New Global.System.Data.DataColumn("BonoMes32daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes32daMoneda)
            Me.columnBonoMes42daMoneda = New Global.System.Data.DataColumn("BonoMes42daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes42daMoneda)
            Me.columnBonoMes52daMoneda = New Global.System.Data.DataColumn("BonoMes52daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes52daMoneda)
            Me.columnBonoMes62daMoneda = New Global.System.Data.DataColumn("BonoMes62daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes62daMoneda)
            Me.columnBonoMes72daMoneda = New Global.System.Data.DataColumn("BonoMes72daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes72daMoneda)
            Me.columnBonoMes82daMoneda = New Global.System.Data.DataColumn("BonoMes82daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes82daMoneda)
            Me.columnBonoMes92daMoneda = New Global.System.Data.DataColumn("BonoMes92daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes92daMoneda)
            Me.columnBonoMes102daMoneda = New Global.System.Data.DataColumn("BonoMes102daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes102daMoneda)
            Me.columnBonoMes112daMoneda = New Global.System.Data.DataColumn("BonoMes112daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes112daMoneda)
            Me.columnBonoMes122daMoneda = New Global.System.Data.DataColumn("BonoMes122daMoneda", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonoMes122daMoneda)
            Me.columnDiferenciaJornal = New Global.System.Data.DataColumn("DiferenciaJornal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiferenciaJornal)
            Me.columnDiferenciaBono = New Global.System.Data.DataColumn("DiferenciaBono", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiferenciaBono)
            Me.columnPorcentajeJornal = New Global.System.Data.DataColumn("PorcentajeJornal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeJornal)
            Me.columnPorcentajeBono = New Global.System.Data.DataColumn("PorcentajeBono", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeBono)
            Me.columnDescripcion.MaxLength = 55
            Me.columnUnidad.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMasterManoObraRow() As MasterManoObraRow
            Return CType(Me.NewRow,MasterManoObraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MasterManoObraRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MasterManoObraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MasterManoObraRowChangedEvent) Is Nothing) Then
                RaiseEvent MasterManoObraRowChanged(Me, New MasterManoObraRowChangeEvent(CType(e.Row,MasterManoObraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MasterManoObraRowChangingEvent) Is Nothing) Then
                RaiseEvent MasterManoObraRowChanging(Me, New MasterManoObraRowChangeEvent(CType(e.Row,MasterManoObraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MasterManoObraRowDeletedEvent) Is Nothing) Then
                RaiseEvent MasterManoObraRowDeleted(Me, New MasterManoObraRowChangeEvent(CType(e.Row,MasterManoObraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MasterManoObraRowDeletingEvent) Is Nothing) Then
                RaiseEvent MasterManoObraRowDeleting(Me, New MasterManoObraRowChangeEvent(CType(e.Row,MasterManoObraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMasterManoObraRow(ByVal row As MasterManoObraRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MasterAPVDataSet1 = New MasterAPVDataSet1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MasterManoObraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MasterManoObraRow
        Inherits Global.System.Data.DataRow
        
        Private tableMasterManoObra As MasterManoObraDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMasterManoObra = CType(Me.Table,MasterManoObraDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.IDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Descripcion() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.DescripcionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Descripcion' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.DescripcionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Codigo() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.CodigoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Codigo' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.CodigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Unidad() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.UnidadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unidad' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.UnidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.FechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fecha' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jornal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jornal' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bono() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bono' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.TipoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tipo' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.TipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes1' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes2' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes3' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes4' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes5' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes6() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes6Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes6' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes7() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes7Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes7' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes8() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes8Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes8' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes9() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes9Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes9' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes10() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes10Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes10' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes11() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes11Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes11' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes12() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes12Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes12' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes1' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes2' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes3' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes4' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes5() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes5' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes6() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes6Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes6' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes7() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes7Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes7' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes8() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes8Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes8' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes9() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes9Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes9' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes10() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes10Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes10' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes11() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes11Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes11' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes12() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes12Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes12' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jornal2daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.Jornal2daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jornal2daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.Jornal2daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bono2daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.Bono2daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bono2daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.Bono2daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes12daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes12daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes12daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes12daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes22daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes22daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes22daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes22daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes32daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes32daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes32daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes32daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes42daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes42daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes42daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes42daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes52daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes52daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes52daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes52daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes62daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes62daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes62daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes62daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes72daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes72daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes72daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes72daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes82daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes82daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes82daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes82daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes92daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes92daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes92daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes92daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes102daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes102daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes102daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes102daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes112daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes112daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes112daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes112daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property JornalMes122daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.JornalMes122daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JornalMes122daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.JornalMes122daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes12daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes12daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes12daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes12daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes22daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes22daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes22daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes22daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes32daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes32daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes32daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes32daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes42daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes42daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes42daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes42daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes52daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes52daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes52daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes52daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes62daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes62daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes62daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes62daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes72daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes72daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes72daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes72daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes82daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes82daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes82daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes82daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes92daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes92daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes92daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes92daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes102daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes102daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes102daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes102daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes112daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes112daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes112daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes112daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BonoMes122daMoneda() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.BonoMes122daMonedaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BonoMes122daMoneda' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.BonoMes122daMonedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DiferenciaJornal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.DiferenciaJornalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DiferenciaJornal' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.DiferenciaJornalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DiferenciaBono() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.DiferenciaBonoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DiferenciaBono' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.DiferenciaBonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcentajeJornal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.PorcentajeJornalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcentajeJornal' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.PorcentajeJornalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcentajeBono() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMasterManoObra.PorcentajeBonoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcentajeBono' in table 'MasterManoObra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterManoObra.PorcentajeBonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDNull()
            Me(Me.tableMasterManoObra.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.DescripcionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescripcionNull()
            Me(Me.tableMasterManoObra.DescripcionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigoNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.CodigoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigoNull()
            Me(Me.tableMasterManoObra.CodigoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUnidadNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.UnidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUnidadNull()
            Me(Me.tableMasterManoObra.UnidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.FechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaNull()
            Me(Me.tableMasterManoObra.FechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalNull()
            Me(Me.tableMasterManoObra.JornalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoNull()
            Me(Me.tableMasterManoObra.BonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.TipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoNull()
            Me(Me.tableMasterManoObra.TipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes1Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes1Null()
            Me(Me.tableMasterManoObra.JornalMes1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes2Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes2Null()
            Me(Me.tableMasterManoObra.JornalMes2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes3Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes3Null()
            Me(Me.tableMasterManoObra.JornalMes3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes4Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes4Null()
            Me(Me.tableMasterManoObra.JornalMes4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes5Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes5Null()
            Me(Me.tableMasterManoObra.JornalMes5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes6Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes6Null()
            Me(Me.tableMasterManoObra.JornalMes6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes7Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes7Null()
            Me(Me.tableMasterManoObra.JornalMes7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes8Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes8Null()
            Me(Me.tableMasterManoObra.JornalMes8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes9Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes9Null()
            Me(Me.tableMasterManoObra.JornalMes9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes10Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes10Null()
            Me(Me.tableMasterManoObra.JornalMes10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes11Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes11Null()
            Me(Me.tableMasterManoObra.JornalMes11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes12Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes12Null()
            Me(Me.tableMasterManoObra.JornalMes12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes1Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes1Null()
            Me(Me.tableMasterManoObra.BonoMes1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes2Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes2Null()
            Me(Me.tableMasterManoObra.BonoMes2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes3Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes3Null()
            Me(Me.tableMasterManoObra.BonoMes3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes4Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes4Null()
            Me(Me.tableMasterManoObra.BonoMes4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes5Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes5Null()
            Me(Me.tableMasterManoObra.BonoMes5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes6Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes6Null()
            Me(Me.tableMasterManoObra.BonoMes6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes7Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes7Null()
            Me(Me.tableMasterManoObra.BonoMes7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes8Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes8Null()
            Me(Me.tableMasterManoObra.BonoMes8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes9Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes9Null()
            Me(Me.tableMasterManoObra.BonoMes9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes10Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes10Null()
            Me(Me.tableMasterManoObra.BonoMes10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes11Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes11Null()
            Me(Me.tableMasterManoObra.BonoMes11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes12Null() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes12Null()
            Me(Me.tableMasterManoObra.BonoMes12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornal2daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.Jornal2daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornal2daMonedaNull()
            Me(Me.tableMasterManoObra.Jornal2daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBono2daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.Bono2daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBono2daMonedaNull()
            Me(Me.tableMasterManoObra.Bono2daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes12daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes12daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes12daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes12daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes22daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes22daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes22daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes22daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes32daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes32daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes32daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes32daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes42daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes42daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes42daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes42daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes52daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes52daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes52daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes52daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes62daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes62daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes62daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes62daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes72daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes72daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes72daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes72daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes82daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes82daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes82daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes82daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes92daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes92daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes92daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes92daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes102daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes102daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes102daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes102daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes112daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes112daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes112daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes112daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJornalMes122daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.JornalMes122daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJornalMes122daMonedaNull()
            Me(Me.tableMasterManoObra.JornalMes122daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes12daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes12daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes12daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes12daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes22daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes22daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes22daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes22daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes32daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes32daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes32daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes32daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes42daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes42daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes42daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes42daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes52daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes52daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes52daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes52daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes62daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes62daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes62daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes62daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes72daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes72daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes72daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes72daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes82daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes82daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes82daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes82daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes92daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes92daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes92daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes92daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes102daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes102daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes102daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes102daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes112daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes112daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes112daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes112daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonoMes122daMonedaNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.BonoMes122daMonedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonoMes122daMonedaNull()
            Me(Me.tableMasterManoObra.BonoMes122daMonedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiferenciaJornalNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.DiferenciaJornalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiferenciaJornalNull()
            Me(Me.tableMasterManoObra.DiferenciaJornalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiferenciaBonoNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.DiferenciaBonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiferenciaBonoNull()
            Me(Me.tableMasterManoObra.DiferenciaBonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcentajeJornalNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.PorcentajeJornalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcentajeJornalNull()
            Me(Me.tableMasterManoObra.PorcentajeJornalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcentajeBonoNull() As Boolean
            Return Me.IsNull(Me.tableMasterManoObra.PorcentajeBonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcentajeBonoNull()
            Me(Me.tableMasterManoObra.PorcentajeBonoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MasterManoObraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MasterManoObraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MasterManoObraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MasterManoObraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace MasterAPVDataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MasterManoObraTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MasterManoObra"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion")
            tableMapping.ColumnMappings.Add("Codigo", "Codigo")
            tableMapping.ColumnMappings.Add("Unidad", "Unidad")
            tableMapping.ColumnMappings.Add("Fecha", "Fecha")
            tableMapping.ColumnMappings.Add("Jornal", "Jornal")
            tableMapping.ColumnMappings.Add("Bono", "Bono")
            tableMapping.ColumnMappings.Add("Tipo", "Tipo")
            tableMapping.ColumnMappings.Add("JornalMes1", "JornalMes1")
            tableMapping.ColumnMappings.Add("JornalMes2", "JornalMes2")
            tableMapping.ColumnMappings.Add("JornalMes3", "JornalMes3")
            tableMapping.ColumnMappings.Add("JornalMes4", "JornalMes4")
            tableMapping.ColumnMappings.Add("JornalMes5", "JornalMes5")
            tableMapping.ColumnMappings.Add("JornalMes6", "JornalMes6")
            tableMapping.ColumnMappings.Add("JornalMes7", "JornalMes7")
            tableMapping.ColumnMappings.Add("JornalMes8", "JornalMes8")
            tableMapping.ColumnMappings.Add("JornalMes9", "JornalMes9")
            tableMapping.ColumnMappings.Add("JornalMes10", "JornalMes10")
            tableMapping.ColumnMappings.Add("JornalMes11", "JornalMes11")
            tableMapping.ColumnMappings.Add("JornalMes12", "JornalMes12")
            tableMapping.ColumnMappings.Add("BonoMes1", "BonoMes1")
            tableMapping.ColumnMappings.Add("BonoMes2", "BonoMes2")
            tableMapping.ColumnMappings.Add("BonoMes3", "BonoMes3")
            tableMapping.ColumnMappings.Add("BonoMes4", "BonoMes4")
            tableMapping.ColumnMappings.Add("BonoMes5", "BonoMes5")
            tableMapping.ColumnMappings.Add("BonoMes6", "BonoMes6")
            tableMapping.ColumnMappings.Add("BonoMes7", "BonoMes7")
            tableMapping.ColumnMappings.Add("BonoMes8", "BonoMes8")
            tableMapping.ColumnMappings.Add("BonoMes9", "BonoMes9")
            tableMapping.ColumnMappings.Add("BonoMes10", "BonoMes10")
            tableMapping.ColumnMappings.Add("BonoMes11", "BonoMes11")
            tableMapping.ColumnMappings.Add("BonoMes12", "BonoMes12")
            tableMapping.ColumnMappings.Add("Jornal2daMoneda", "Jornal2daMoneda")
            tableMapping.ColumnMappings.Add("Bono2daMoneda", "Bono2daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes12daMoneda", "JornalMes12daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes22daMoneda", "JornalMes22daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes32daMoneda", "JornalMes32daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes42daMoneda", "JornalMes42daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes52daMoneda", "JornalMes52daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes62daMoneda", "JornalMes62daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes72daMoneda", "JornalMes72daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes82daMoneda", "JornalMes82daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes92daMoneda", "JornalMes92daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes102daMoneda", "JornalMes102daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes112daMoneda", "JornalMes112daMoneda")
            tableMapping.ColumnMappings.Add("JornalMes122daMoneda", "JornalMes122daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes12daMoneda", "BonoMes12daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes22daMoneda", "BonoMes22daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes32daMoneda", "BonoMes32daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes42daMoneda", "BonoMes42daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes52daMoneda", "BonoMes52daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes62daMoneda", "BonoMes62daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes72daMoneda", "BonoMes72daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes82daMoneda", "BonoMes82daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes92daMoneda", "BonoMes92daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes102daMoneda", "BonoMes102daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes112daMoneda", "BonoMes112daMoneda")
            tableMapping.ColumnMappings.Add("BonoMes122daMoneda", "BonoMes122daMoneda")
            tableMapping.ColumnMappings.Add("DiferenciaJornal", "DiferenciaJornal")
            tableMapping.ColumnMappings.Add("DiferenciaBono", "DiferenciaBono")
            tableMapping.ColumnMappings.Add("PorcentajeJornal", "PorcentajeJornal")
            tableMapping.ColumnMappings.Add("PorcentajeBono", "PorcentajeBono")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `MasterManoObra` (`ID`, `Descripcion`, `Codigo`, `Unidad`, `Fecha`, `"& _ 
                "Jornal`, `Bono`, `Tipo`, `JornalMes1`, `JornalMes2`, `JornalMes3`, `JornalMes4`,"& _ 
                " `JornalMes5`, `JornalMes6`, `JornalMes7`, `JornalMes8`, `JornalMes9`, `JornalMe"& _ 
                "s10`, `JornalMes11`, `JornalMes12`, `BonoMes1`, `BonoMes2`, `BonoMes3`, `BonoMes"& _ 
                "4`, `BonoMes5`, `BonoMes6`, `BonoMes7`, `BonoMes8`, `BonoMes9`, `BonoMes10`, `Bo"& _ 
                "noMes11`, `BonoMes12`, `Jornal2daMoneda`, `Bono2daMoneda`, `JornalMes12daMoneda`"& _ 
                ", `JornalMes22daMoneda`, `JornalMes32daMoneda`, `JornalMes42daMoneda`, `JornalMe"& _ 
                "s52daMoneda`, `JornalMes62daMoneda`, `JornalMes72daMoneda`, `JornalMes82daMoneda"& _ 
                "`, `JornalMes92daMoneda`, `JornalMes102daMoneda`, `JornalMes112daMoneda`, `Jorna"& _ 
                "lMes122daMoneda`, `BonoMes12daMoneda`, `BonoMes22daMoneda`, `BonoMes32daMoneda`,"& _ 
                " `BonoMes42daMoneda`, `BonoMes52daMoneda`, `BonoMes62daMoneda`, `BonoMes72daMone"& _ 
                "da`, `BonoMes82daMoneda`, `BonoMes92daMoneda`, `BonoMes102daMoneda`, `BonoMes112"& _ 
                "daMoneda`, `BonoMes122daMoneda`, `DiferenciaJornal`, `DiferenciaBono`, `Porcenta"& _ 
                "jeJornal`, `PorcentajeBono`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ID", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Descripcion", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Descripcion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Codigo", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Codigo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unidad", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unidad", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Fecha", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Fecha", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Jornal", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Jornal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bono", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bono", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tipo", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tipo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes1", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes2", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes3", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes4", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes5", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes6", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes7", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes8", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes9", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes9", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes10", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes10", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes11", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes11", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes12", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes12", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes1", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes2", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes3", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes4", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes5", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes6", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes7", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes8", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes9", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes9", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes10", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes10", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes11", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes11", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes12", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes12", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Jornal2daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Jornal2daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bono2daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bono2daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes12daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes12daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes22daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes22daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes32daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes32daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes42daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes42daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes52daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes52daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes62daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes62daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes72daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes72daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes82daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes82daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes92daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes92daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes102daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes102daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes112daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes112daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JornalMes122daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JornalMes122daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes12daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes12daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes22daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes22daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes32daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes32daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes42daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes42daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes52daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes52daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes62daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes62daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes72daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes72daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes82daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes82daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes92daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes92daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes102daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes102daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes112daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes112daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BonoMes122daMoneda", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BonoMes122daMoneda", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DiferenciaJornal", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DiferenciaJornal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DiferenciaBono", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DiferenciaBono", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PorcentajeJornal", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PorcentajeJornal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PorcentajeBono", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PorcentajeBono", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection
            Me._connection.ConnectionString = Global.APP2020.My.MySettings.Default.MasterAPVConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, Descripcion, Codigo, Unidad, Fecha, Jornal, Bono, Tipo, JornalMes1, Jo"& _ 
                "rnalMes2, JornalMes3, JornalMes4, JornalMes5, JornalMes6, JornalMes7, JornalMes8"& _ 
                ", JornalMes9, JornalMes10, JornalMes11, JornalMes12, BonoMes1, BonoMes2, BonoMes"& _ 
                "3, BonoMes4, BonoMes5, BonoMes6, BonoMes7, BonoMes8, BonoMes9, BonoMes10, BonoMe"& _ 
                "s11, BonoMes12, Jornal2daMoneda, Bono2daMoneda, JornalMes12daMoneda, JornalMes22"& _ 
                "daMoneda, JornalMes32daMoneda, JornalMes42daMoneda, JornalMes52daMoneda, JornalM"& _ 
                "es62daMoneda, JornalMes72daMoneda, JornalMes82daMoneda, JornalMes92daMoneda, Jor"& _ 
                "nalMes102daMoneda, JornalMes112daMoneda, JornalMes122daMoneda, BonoMes12daMoneda"& _ 
                ", BonoMes22daMoneda, BonoMes32daMoneda, BonoMes42daMoneda, BonoMes52daMoneda, Bo"& _ 
                "noMes62daMoneda, BonoMes72daMoneda, BonoMes82daMoneda, BonoMes92daMoneda, BonoMe"& _ 
                "s102daMoneda, BonoMes112daMoneda, BonoMes122daMoneda, DiferenciaJornal, Diferenc"& _ 
                "iaBono, PorcentajeJornal, PorcentajeBono FROM MasterManoObra"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MasterAPVDataSet1.MasterManoObraDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MasterAPVDataSet1.MasterManoObraDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MasterAPVDataSet1.MasterManoObraDataTable = New MasterAPVDataSet1.MasterManoObraDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MasterAPVDataSet1.MasterManoObraDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MasterAPVDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "MasterManoObra")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID As Global.System.Nullable(Of Double),  _
                    ByVal Descripcion As String,  _
                    ByVal Codigo As Global.System.Nullable(Of Double),  _
                    ByVal Unidad As String,  _
                    ByVal Fecha As Global.System.Nullable(Of Date),  _
                    ByVal Jornal As Global.System.Nullable(Of Double),  _
                    ByVal Bono As Global.System.Nullable(Of Double),  _
                    ByVal Tipo As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes1 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes2 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes3 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes4 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes5 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes6 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes7 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes8 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes9 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes10 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes11 As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes12 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes1 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes2 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes3 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes4 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes5 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes6 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes7 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes8 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes9 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes10 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes11 As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes12 As Global.System.Nullable(Of Double),  _
                    ByVal Jornal2daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal Bono2daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes12daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes22daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes32daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes42daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes52daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes62daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes72daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes82daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes92daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes102daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes112daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal JornalMes122daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes12daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes22daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes32daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes42daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes52daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes62daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes72daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes82daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes92daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes102daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes112daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal BonoMes122daMoneda As Global.System.Nullable(Of Double),  _
                    ByVal DiferenciaJornal As Global.System.Nullable(Of Double),  _
                    ByVal DiferenciaBono As Global.System.Nullable(Of Double),  _
                    ByVal PorcentajeJornal As Global.System.Nullable(Of Double),  _
                    ByVal PorcentajeBono As Global.System.Nullable(Of Double)) As Integer
            If (ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Descripcion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Descripcion,String)
            End If
            If (Codigo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Codigo.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Unidad Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Unidad,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Jornal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Jornal.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Bono.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Bono.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Tipo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Tipo.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (JornalMes1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(JornalMes1.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (JornalMes2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(JornalMes2.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (JornalMes3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(JornalMes3.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (JornalMes4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(JornalMes4.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (JornalMes5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(JornalMes5.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (JornalMes6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(JornalMes6.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (JornalMes7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(JornalMes7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (JornalMes8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(JornalMes8.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (JornalMes9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(JornalMes9.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (JornalMes10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(JornalMes10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (JornalMes11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(JornalMes11.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (JornalMes12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(JornalMes12.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (BonoMes1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BonoMes1.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BonoMes2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(BonoMes2.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BonoMes3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(BonoMes3.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (BonoMes4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(BonoMes4.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (BonoMes5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(BonoMes5.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BonoMes6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(BonoMes6.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (BonoMes7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(BonoMes7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BonoMes8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(BonoMes8.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BonoMes9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BonoMes9.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (BonoMes10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(BonoMes10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BonoMes11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BonoMes11.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (BonoMes12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(BonoMes12.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Jornal2daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Jornal2daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Bono2daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Bono2daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (JornalMes12daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(JornalMes12daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (JornalMes22daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(JornalMes22daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (JornalMes32daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(JornalMes32daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (JornalMes42daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(JornalMes42daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (JornalMes52daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(JornalMes52daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (JornalMes62daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(JornalMes62daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (JornalMes72daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(JornalMes72daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (JornalMes82daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(JornalMes82daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (JornalMes92daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(JornalMes92daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (JornalMes102daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(JornalMes102daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (JornalMes112daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(JornalMes112daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (JornalMes122daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(JornalMes122daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (BonoMes12daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(BonoMes12daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (BonoMes22daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(BonoMes22daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (BonoMes32daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(BonoMes32daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (BonoMes42daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(BonoMes42daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (BonoMes52daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(BonoMes52daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (BonoMes62daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(BonoMes62daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (BonoMes72daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(BonoMes72daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (BonoMes82daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(BonoMes82daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (BonoMes92daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(BonoMes92daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (BonoMes102daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(BonoMes102daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (BonoMes112daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(BonoMes112daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (BonoMes122daMoneda.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(BonoMes122daMoneda.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (DiferenciaJornal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(DiferenciaJornal.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (DiferenciaBono.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(DiferenciaBono.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (PorcentajeJornal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(PorcentajeJornal.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (PorcentajeBono.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(PorcentajeBono.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
End Namespace
